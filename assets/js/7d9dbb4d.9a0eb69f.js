(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8861],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?a.createElement(k,l(l({ref:n},p),{},{components:t})):a.createElement(k,l({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8012:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return o},toc:function(){return s},default:function(){return p}});var a=t(2122),i=t(9756),r=(t(7294),t(3905)),l={id:"easing",title:"Easing"},o={unversionedId:"easing",id:"easing",isDocsHomePage:!1,title:"Easing",description:"The Easing API is the exact same as the one from React Native and the documentation has been copied over. Credit goes to them for this excellent API.",source:"@site/docs/easing.md",sourceDirName:".",slug:"/easing",permalink:"/docs/easing",editUrl:"https://github.com/JonnyBurger/remotion/edit/main/packages/docs/docs/easing.md",version:"current",frontMatter:{id:"easing",title:"Easing"},sidebar:"someSidebar",previous:{title:"<IFrame />",permalink:"/docs/iframe"},next:{title:"bundle()",permalink:"/docs/bundle"}},s=[{value:"Predefined animations",id:"predefined-animations",children:[]},{value:"Standard functions",id:"standard-functions",children:[]},{value:"Additional functions",id:"additional-functions",children:[]},{value:"Example",id:"example",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>step0()</code>",id:"step0",children:[]},{value:"<code>step1()</code>",id:"step1",children:[]},{value:"<code>linear()</code>",id:"linear",children:[]},{value:"<code>ease()</code>",id:"ease",children:[]},{value:"<code>quad()</code>",id:"quad",children:[]},{value:"<code>cubic()</code>",id:"cubic",children:[]},{value:"<code>poly()</code>",id:"poly",children:[]},{value:"<code>sin()</code>",id:"sin",children:[]},{value:"<code>circle()</code>",id:"circle",children:[]},{value:"<code>exp()</code>",id:"exp",children:[]},{value:"<code>elastic()</code>",id:"elastic",children:[]},{value:"<code>back()</code>",id:"back",children:[]},{value:"<code>bounce()</code>",id:"bounce",children:[]},{value:"<code>bezier()</code>",id:"bezier",children:[]},{value:"<code>in()</code>",id:"in",children:[]},{value:"<code>out()</code>",id:"out",children:[]},{value:"<code>inOut()</code>",id:"inout",children:[]}]}],c={toc:s};function p(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The Easing API is the exact same as the one from ",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/easing"},"React Native")," and the documentation has been copied over. Credit goes to them for this excellent API."))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Easing")," module implements common easing functions. You can use it with the ",(0,r.kt)("a",{parentName:"p",href:"/docs/interpolate"},(0,r.kt)("inlineCode",{parentName:"a"},"interpolate()"))," API."),(0,r.kt)("p",null,"You can find a visualization of some common easing functions at ",(0,r.kt)("a",{parentName:"p",href:"http://easings.net/"},"http://easings.net/")),(0,r.kt)("h3",{id:"predefined-animations"},"Predefined animations"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Easing")," module provides several predefined animations through the following methods:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#back"},(0,r.kt)("inlineCode",{parentName:"a"},"back"))," provides a basic animation where the object goes slightly back before moving forward"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#bounce"},(0,r.kt)("inlineCode",{parentName:"a"},"bounce"))," provides a bouncing animation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#ease"},(0,r.kt)("inlineCode",{parentName:"a"},"ease"))," provides a basic inertial animation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#elastic"},(0,r.kt)("inlineCode",{parentName:"a"},"elastic"))," provides a basic spring interaction")),(0,r.kt)("h3",{id:"standard-functions"},"Standard functions"),(0,r.kt)("p",null,"Three standard easing functions are provided:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#linear"},(0,r.kt)("inlineCode",{parentName:"a"},"linear"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#quad"},(0,r.kt)("inlineCode",{parentName:"a"},"quad"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#cubic"},(0,r.kt)("inlineCode",{parentName:"a"},"cubic")))),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/easing#poly"},(0,r.kt)("inlineCode",{parentName:"a"},"poly"))," function can be used to implement quartic, quintic, and other higher power functions."),(0,r.kt)("h3",{id:"additional-functions"},"Additional functions"),(0,r.kt)("p",null,"Additional mathematical functions are provided by the following methods:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#bezier"},(0,r.kt)("inlineCode",{parentName:"a"},"bezier"))," provides a cubic bezier curve"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#circle"},(0,r.kt)("inlineCode",{parentName:"a"},"circle"))," provides a circular function"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#sin"},(0,r.kt)("inlineCode",{parentName:"a"},"sin"))," provides a sinusoidal function"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#exp"},(0,r.kt)("inlineCode",{parentName:"a"},"exp"))," provides an exponential function")),(0,r.kt)("p",null,"The following helpers are used to modify other easing functions."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#in"},(0,r.kt)("inlineCode",{parentName:"a"},"in"))," runs an easing function forwards"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#inout"},(0,r.kt)("inlineCode",{parentName:"a"},"inOut"))," makes any easing function symmetrical"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/easing#out"},(0,r.kt)("inlineCode",{parentName:"a"},"out"))," runs an easing function backwards")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import {interpolate, Easing} from 'remotion';\n\nconst MyVideo: React.FC = () => {\n  const frame = useCurrentFrame();\n  const interpolated = interpolate(frame, [0, 100], {\n    easing: Easing.bezier(0.8, 0.22, 0.96, 0.65),\n    extrapolateLeft: 'clamp',\n    extrapolateRight: 'clamp',\n  });\n\n  return (\n    <AbsoluteFill style={{transform: `scale(${interpolated})`, backgroundColor: 'red'}} />\n  )\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"reference"},"Reference"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"step0"},(0,r.kt)("inlineCode",{parentName:"h3"},"step0()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static step0(n)\n")),(0,r.kt)("p",null,"A stepping function, returns 1 for any positive value of ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"step1"},(0,r.kt)("inlineCode",{parentName:"h3"},"step1()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static step1(n)\n")),(0,r.kt)("p",null,"A stepping function, returns 1 if ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is greater than or equal to 1."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"linear"},(0,r.kt)("inlineCode",{parentName:"h3"},"linear()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static linear(t)\n")),(0,r.kt)("p",null,"A linear function, ",(0,r.kt)("inlineCode",{parentName:"p"},"f(t) = t"),". Position correlates to elapsed time one to one."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://cubic-bezier.com/#0,0,1,1"},"http://cubic-bezier.com/#0,0,1,1")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ease"},(0,r.kt)("inlineCode",{parentName:"h3"},"ease()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static ease(t)\n")),(0,r.kt)("p",null,"A basic inertial interaction, similar to an object slowly accelerating to speed."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://cubic-bezier.com/#.42,0,1,1"},"http://cubic-bezier.com/#.42,0,1,1")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"quad"},(0,r.kt)("inlineCode",{parentName:"h3"},"quad()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static quad(t)\n")),(0,r.kt)("p",null,"A quadratic function, ",(0,r.kt)("inlineCode",{parentName:"p"},"f(t) = t * t"),". Position equals the square of elapsed time."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInQuad"},"http://easings.net/#easeInQuad")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cubic"},(0,r.kt)("inlineCode",{parentName:"h3"},"cubic()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static cubic(t)\n")),(0,r.kt)("p",null,"A cubic function, ",(0,r.kt)("inlineCode",{parentName:"p"},"f(t) = t * t * t"),". Position equals the cube of elapsed time."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInCubic"},"http://easings.net/#easeInCubic")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"poly"},(0,r.kt)("inlineCode",{parentName:"h3"},"poly()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static poly(n)\n")),(0,r.kt)("p",null,"A power function. Position is equal to the Nth power of elapsed time."),(0,r.kt)("p",null,"n = 4: ",(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInQuart"},"http://easings.net/#easeInQuart")," n = 5: ",(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInQuint"},"http://easings.net/#easeInQuint")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sin"},(0,r.kt)("inlineCode",{parentName:"h3"},"sin()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static sin(t)\n")),(0,r.kt)("p",null,"A sinusoidal function."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInSine"},"http://easings.net/#easeInSine")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"circle"},(0,r.kt)("inlineCode",{parentName:"h3"},"circle()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static circle(t)\n")),(0,r.kt)("p",null,"A circular function."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInCirc"},"http://easings.net/#easeInCirc")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"exp"},(0,r.kt)("inlineCode",{parentName:"h3"},"exp()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static exp(t)\n")),(0,r.kt)("p",null,"An exponential function."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInExpo"},"http://easings.net/#easeInExpo")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"elastic"},(0,r.kt)("inlineCode",{parentName:"h3"},"elastic()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static elastic(bounciness)\n")),(0,r.kt)("p",null,"A basic elastic interaction, similar to a spring oscillating back and forth."),(0,r.kt)("p",null,"Default bounciness is 1, which overshoots a little bit once. 0 bounciness doesn't overshoot at all, and bounciness of N > 1 will overshoot about N times."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInElastic"},"http://easings.net/#easeInElastic")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"back"},(0,r.kt)("inlineCode",{parentName:"h3"},"back()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static back(s)\n")),(0,r.kt)("p",null,"Use with ",(0,r.kt)("inlineCode",{parentName:"p"},"Animated.parallel()")," to create a basic effect where the object animates back slightly as the animation starts."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bounce"},(0,r.kt)("inlineCode",{parentName:"h3"},"bounce()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static bounce(t)\n")),(0,r.kt)("p",null,"Provides a basic bouncing effect."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://easings.net/#easeInBounce"},"http://easings.net/#easeInBounce")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bezier"},(0,r.kt)("inlineCode",{parentName:"h3"},"bezier()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static bezier(x1, y1, x2, y2)\n")),(0,r.kt)("p",null,"Provides a cubic bezier curve, equivalent to CSS Transitions' ",(0,r.kt)("inlineCode",{parentName:"p"},"transition-timing-function"),"."),(0,r.kt)("p",null,"A useful tool to visualize cubic bezier curves can be found at ",(0,r.kt)("a",{parentName:"p",href:"http://cubic-bezier.com/"},"http://cubic-bezier.com/")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"in"},(0,r.kt)("inlineCode",{parentName:"h3"},"in()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static in(easing);\n")),(0,r.kt)("p",null,"Runs an easing function forwards."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"out"},(0,r.kt)("inlineCode",{parentName:"h3"},"out()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static out(easing)\n")),(0,r.kt)("p",null,"Runs an easing function backwards."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"inout"},(0,r.kt)("inlineCode",{parentName:"h3"},"inOut()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"static inOut(easing)\n")),(0,r.kt)("p",null,"Makes any easing function symmetrical. The easing function will run forwards for half of the duration, then backwards for the rest of the duration."))}p.isMDXComponent=!0}}]);