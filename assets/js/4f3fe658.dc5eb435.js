(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1717],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),f=i,g=m["".concat(l,".").concat(f)]||m[f]||c[f]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7409:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o={id:"animating-properties",title:"Animating properties"},s={unversionedId:"animating-properties",id:"animating-properties",isDocsHomePage:!1,title:"Animating properties",description:"Animation is all about how properties change over time.",source:"@site/docs/animating-properties.md",sourceDirName:".",slug:"/animating-properties",permalink:"/docs/animating-properties",editUrl:"https://github.com/JonnyBurger/remotion/edit/main/packages/docs/docs/animating-properties.md",version:"current",frontMatter:{id:"animating-properties",title:"Animating properties"},sidebar:"someSidebar",previous:{title:"The fundamentals",permalink:"/docs/the-fundamentals"},next:{title:"Reuse components using Sequences",permalink:"/docs/reusability"}},l=[{value:"Using the interpolate helper function",id:"using-the-interpolate-helper-function",children:[]},{value:"Using spring animations",id:"using-spring-animations",children:[]}],p={toc:l};function u(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Animation is all about how properties change over time."),"\nLet's start with a simple example, let's say we want to create a fade in animation."),(0,a.kt)("p",null,"If we want to fade the text in over 20 frames, we need to gradually change the ",(0,a.kt)("inlineCode",{parentName:"p"},"opacity")," style over time so that it goes from 0 to 1."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{4,11}","{4,11}":!0},"export const MyVideo = () => {\n  const frame = useCurrentFrame();\n\n  const opacity = frame >= 20 ? 1 : (frame / 20);\n\n  return (\n    <div style={{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      opacity: opacity\n    }}>\n      Hello World!\n    </div>\n  )\n}\n")),(0,a.kt)("h2",{id:"using-the-interpolate-helper-function"},"Using the interpolate helper function"),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"interpolate")," function can make animations more readable.\nThe function takes 4 arguments:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The input value"),(0,a.kt)("li",{parentName:"ol"},"The range values which the input can assume"),(0,a.kt)("li",{parentName:"ol"},"The range of values that you want to map the input to"),(0,a.kt)("li",{parentName:"ol"},"Optional settings")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{6,13}","{6,13}":!0},"import {useCurrentFrame, interpolate} from 'remotion';\n\nexport const MyVideo = () => {\n  const frame = useCurrentFrame();\n\n  const opacity = interpolate(frame, [0, 20], [0, 1], {extrapolateRight: 'clamp'});\n\n  return (\n    <div style={{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      opacity: opacity\n    }}>\n      Hello World!\n    </div>\n  )\n}\n")),(0,a.kt)("p",null,"In this example, we map the frames 0 to 20 to their opacity values ",(0,a.kt)("inlineCode",{parentName:"p"},"(0, 0.05, 0.1, 0.15 ..."),") and use the ",(0,a.kt)("inlineCode",{parentName:"p"},"extrapolateRight")," setting to clamp the output so that it never becomes bigger than 1."),(0,a.kt)("h2",{id:"using-spring-animations"},"Using spring animations"),(0,a.kt)("p",null,"Spring animations are beautiful way to put things into motion and make them natural. Remotion includes a helper function to make spring animations easy! This time, let's animate the scale of the text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{7,20}","{7,20}":!0},"import {useCurrentFrame, useVideoConfig, spring} from 'remotion';\n\nexport const MyVideo = () => {\n  const frame = useCurrentFrame();\n  const {fps} = useVideoConfig();\n\n  const scale = spring({\n    fps,\n    from: 0,\n    to: 1,\n    frame\n  });\n\n  return (\n    <div style={{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}>\n      <div style={{transform: `scale(${scale})`}}>Hello World!</div>\n    </div>\n  )\n}\n")),(0,a.kt)("p",null,"You should see the text 'jump in'. The default spring configuration leads to a little bit of overshoot, meaning the text will bounce a little bit. See the reference page about the ",(0,a.kt)("inlineCode",{parentName:"p"},"spring")," function to learn how to customize your spring animations."))}u.isMDXComponent=!0}}]);