(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3492],{3905:function(e,n,r){"use strict";r.r(n),r.d(n,{MDXContext:function(){return l},MDXProvider:function(){return u},mdx:function(){return h},useMDXComponents:function(){return s},withMDXComponents:function(){return p}});var a=r(2784);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(){return(t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e}).apply(this,arguments)}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function d(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function m(e,n){if(null==e)return{};var r,a,o=function(e,n){if(null==e)return{};var r,a,o={},t=Object.keys(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),p=function(e){return function(n){var r=s(n.components);return a.createElement(e,t({},n,{components:r}))}},s=function(e){var n=a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):d(d({},n),e)),r},u=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var r=e.components,o=e.mdxType,t=e.originalType,i=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),p=s(r),u=o,f=p["".concat(i,".").concat(u)]||p[u]||c[u]||t;return r?a.createElement(f,d(d({ref:n},l),{},{components:r})):a.createElement(f,d({ref:n},l))}));function h(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=r.length,i=new Array(t);i[0]=f;var d={};for(var m in n)hasOwnProperty.call(n,m)&&(d[m]=n[m]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var l=2;l<t;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},16902:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return i},metadata:function(){return d},toc:function(){return m},default:function(){return p}});var a=r(22122),o=r(19756),t=(r(2784),r(3905)),i={id:"render-frames",title:"renderFrames()"},d={unversionedId:"render-frames",id:"render-frames",isDocsHomePage:!1,title:"renderFrames()",description:"Part of the @remotion/renderer package.",source:"@site/docs/render-frames.md",sourceDirName:".",slug:"/render-frames",permalink:"/docs/render-frames",editUrl:"https://github.com/JonnyBurger/remotion/edit/main/packages/docs/docs/render-frames.md",version:"current",frontMatter:{id:"render-frames",title:"renderFrames()"},sidebar:"someSidebar",previous:{title:"getCompositions()",permalink:"/docs/get-compositions"},next:{title:"stitchFramesToVideo()",permalink:"/docs/stitch-frames-to-video"}},m=[{value:"Arguments",id:"arguments",children:[{value:"<code>config</code>",id:"config",children:[]},{value:"<code>compositionId</code>",id:"compositionid",children:[]},{value:"<code>onStart</code>",id:"onstart",children:[]},{value:"<code>onFrameUpdate</code>",id:"onframeupdate",children:[]},{value:"<code>outputDir</code>",id:"outputdir",children:[]},{value:"<code>inputProps</code>",id:"inputprops",children:[]},{value:"<code>webpackBundle</code>",id:"webpackbundle",children:[]},{value:"<code>imageFormat</code>",id:"imageformat",children:[]},{value:"<code>parallelism?</code>",id:"parallelism",children:[]},{value:"<code>quality?</code>",id:"quality",children:[]},{value:"<code>frameRange?</code>",id:"framerange",children:[]},{value:"<code>dumpBrowserLogs?</code>",id:"dumpbrowserlogs",children:[]},{value:"<code>puppeteerInstance?</code>",id:"puppeteerinstance",children:[]},{value:"<code>envVariables?</code>",id:"envvariables",children:[]},{value:"<code>onError?</code>",id:"onerror",children:[]}]},{value:"Return value",id:"return-value",children:[]},{value:"See also",id:"see-also",children:[]}],l={toc:m};function p(e){var n=e.components,r=(0,o.default)(e,["components"]);return(0,t.mdx)("wrapper",(0,a.default)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"Part of the ",(0,t.mdx)("inlineCode",{parentName:"em"},"@remotion/renderer")," package.")),(0,t.mdx)("p",null,"Renders a series of images using Puppeteer and computes information for mixing audio."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-ts"},'const renderFrames: (options: {\n  config: VideoConfig;\n  compositionId: string;\n  onFrameUpdate: (frame: number) => void;\n  onStart: (data: {\n    frameCount: number;\n  }) => void;\n  outputDir: string;\n  inputProps: unknown;\n  webpackBundle: string;\n  imageFormat: "png" | "jpeg" | "none";\n  envVariables?: Record<string, string>;\n  parallelism?: number | null;\n  quality?: number;\n  frameRange?: number | [number, number] | null;\n  dumpBrowserLogs?: boolean;\n  puppeteerInstance?: puppeteer.Browser;\n  onError?: (info: {error: Error; frame: number | null}) => void;\n}): Promise<RenderFramesOutput>;\n')),(0,t.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,t.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,t.mdx)("h5",{parentName:"div"},(0,t.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,t.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,t.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,t.mdx)("div",{parentName:"div",className:"admonition-content"},(0,t.mdx)("p",{parentName:"div"},"Configuration in ",(0,t.mdx)("inlineCode",{parentName:"p"},"remotion.config.ts")," and CLI flags do not apply to this function. You must pass all options explicitly."))),(0,t.mdx)("h2",{id:"arguments"},"Arguments"),(0,t.mdx)("p",null,"Takes an object with the following keys:"),(0,t.mdx)("h3",{id:"config"},(0,t.mdx)("inlineCode",{parentName:"h3"},"config")),(0,t.mdx)("p",null,"A video config, consisting out of ",(0,t.mdx)("inlineCode",{parentName:"p"},"width"),", ",(0,t.mdx)("inlineCode",{parentName:"p"},"height"),", ",(0,t.mdx)("inlineCode",{parentName:"p"},"durationInFrames")," and ",(0,t.mdx)("inlineCode",{parentName:"p"},"fps"),". See: ",(0,t.mdx)("a",{parentName:"p",href:"/docs/the-fundamentals#defining-compositions"},"Defining compositions")," and ",(0,t.mdx)("a",{parentName:"p",href:"/docs/use-video-config"},"useVideoConfig()"),"."),(0,t.mdx)("h3",{id:"compositionid"},(0,t.mdx)("inlineCode",{parentName:"h3"},"compositionId")),(0,t.mdx)("p",null,"A ",(0,t.mdx)("inlineCode",{parentName:"p"},"string")," specifying the ID of the composition. See: ",(0,t.mdx)("a",{parentName:"p",href:"/docs/the-fundamentals#defining-compositions"},"Defining compositions"),"."),(0,t.mdx)("h3",{id:"onstart"},(0,t.mdx)("inlineCode",{parentName:"h3"},"onStart")),(0,t.mdx)("p",null,"A callback that fires after the setup process (validation, browser launch) has finished. Example value"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-ts"},"const onStart = () => {\n  console.log('Starting rendering...');\n}\n")),(0,t.mdx)("h3",{id:"onframeupdate"},(0,t.mdx)("inlineCode",{parentName:"h3"},"onFrameUpdate")),(0,t.mdx)("p",null,"A callback function that gets called whenever a frame finished rendering. An argument is passed containing how many frames have been rendered (not the frame number of the rendered frame). Example value"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-ts"},"const onFrameUpdate = (frame: number) => {\n  console.log(`${frame} frames rendered.`)\n}\n")),(0,t.mdx)("h3",{id:"outputdir"},(0,t.mdx)("inlineCode",{parentName:"h3"},"outputDir")),(0,t.mdx)("p",null,"A ",(0,t.mdx)("inlineCode",{parentName:"p"},"string")," specifying the directory (absolute path) to which frames should be saved."),(0,t.mdx)("h3",{id:"inputprops"},(0,t.mdx)("inlineCode",{parentName:"h3"},"inputProps")),(0,t.mdx)("p",null,"Custom props which will be passed to the component. Useful for rendering videos with dynamic content. Can be an object of any shape."),(0,t.mdx)("h3",{id:"webpackbundle"},(0,t.mdx)("inlineCode",{parentName:"h3"},"webpackBundle")),(0,t.mdx)("p",null,"A ",(0,t.mdx)("inlineCode",{parentName:"p"},"string")," specifying the location of the bundled Remotion project."),(0,t.mdx)("h3",{id:"imageformat"},(0,t.mdx)("inlineCode",{parentName:"h3"},"imageFormat")),(0,t.mdx)("p",null,"A ",(0,t.mdx)("inlineCode",{parentName:"p"},"string")," which must be either ",(0,t.mdx)("inlineCode",{parentName:"p"},"png"),", ",(0,t.mdx)("inlineCode",{parentName:"p"},"jpeg")," or ",(0,t.mdx)("inlineCode",{parentName:"p"},"none"),"."),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"Choose ",(0,t.mdx)("inlineCode",{parentName:"li"},"jpeg")," by default because it is the fastest."),(0,t.mdx)("li",{parentName:"ul"},"Choose ",(0,t.mdx)("inlineCode",{parentName:"li"},"png")," if you want your image sequence to have an alpha channel (for transparency)."),(0,t.mdx)("li",{parentName:"ul"},"Choose ",(0,t.mdx)("inlineCode",{parentName:"li"},"none")," if you only want to render audio.")),(0,t.mdx)("h3",{id:"parallelism"},(0,t.mdx)("inlineCode",{parentName:"h3"},"parallelism?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional")),(0,t.mdx)("p",null,"A ",(0,t.mdx)("inlineCode",{parentName:"p"},"number")," specifying how many frames should be rendered in parallel or ",(0,t.mdx)("inlineCode",{parentName:"p"},"null")," to let Remotion decide based on the CPU of the host machine. Default is half of the CPU threads available."),(0,t.mdx)("h3",{id:"quality"},(0,t.mdx)("inlineCode",{parentName:"h3"},"quality?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional")),(0,t.mdx)("p",null,"Sets the quality of the generated JPEG images. Must be an integer between 0 and 100. Default is to leave it up to the browser, ",(0,t.mdx)("a",{parentName:"p",href:"https://github.com/chromium/chromium/blob/99314be8152e688bafbbf9a615536bdbb289ea87/headless/lib/browser/protocol/headless_handler.cc#L32"},"current default is 80"),"."),(0,t.mdx)("p",null,"Only applies if ",(0,t.mdx)("inlineCode",{parentName:"p"},"imageFormat")," is ",(0,t.mdx)("inlineCode",{parentName:"p"},"'jpeg'"),", otherwise this option is invalid."),(0,t.mdx)("h3",{id:"framerange"},(0,t.mdx)("inlineCode",{parentName:"h3"},"frameRange?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional")),(0,t.mdx)("p",null,"Specify a single frame (passing a ",(0,t.mdx)("inlineCode",{parentName:"p"},"number"),") or a range of frames (passsing a tuple ",(0,t.mdx)("inlineCode",{parentName:"p"},"[number, number]"),") to be rendered. By passing ",(0,t.mdx)("inlineCode",{parentName:"p"},"null")," (default) all frames of a composition get rendered."),(0,t.mdx)("h3",{id:"dumpbrowserlogs"},(0,t.mdx)("inlineCode",{parentName:"h3"},"dumpBrowserLogs?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional")),(0,t.mdx)("p",null,"Passes the ",(0,t.mdx)("inlineCode",{parentName:"p"},"dumpio")," flag to Puppeteer which will log all browser logs to the console. Useful for debugging. ",(0,t.mdx)("inlineCode",{parentName:"p"},"boolean")," flag, default is ",(0,t.mdx)("inlineCode",{parentName:"p"},"false"),"."),(0,t.mdx)("h3",{id:"puppeteerinstance"},(0,t.mdx)("inlineCode",{parentName:"h3"},"puppeteerInstance?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional")),(0,t.mdx)("p",null,"An already open Puppeteer ",(0,t.mdx)("a",{parentName:"p",href:"https://pptr.dev/#?product=Puppeteer&version=main&show=api-class-browser"},(0,t.mdx)("inlineCode",{parentName:"a"},"Browser"))," instance. Reusing a browser across multiple function calls can speed up the rendering process. You are responsible for opening and closing the browser yourself. If you don't specify this option, a new browser will be opened and closed at the end."),(0,t.mdx)("h3",{id:"envvariables"},(0,t.mdx)("inlineCode",{parentName:"h3"},"envVariables?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional - Available since v2.2.0")),(0,t.mdx)("p",null,"An object containing key-value pairs of environment variables which will be injected into your Remotion projected and which can be accessed by reading the global ",(0,t.mdx)("inlineCode",{parentName:"p"},"process.env")," object."),(0,t.mdx)("h3",{id:"onerror"},(0,t.mdx)("inlineCode",{parentName:"h3"},"onError?")),(0,t.mdx)("p",null,(0,t.mdx)("em",{parentName:"p"},"optional - Available since v2.1.0")),(0,t.mdx)("p",null,"Allows you to react to an exception thrown in your React code. The callback has an argument which is an object containing ",(0,t.mdx)("inlineCode",{parentName:"p"},"error")," and ",(0,t.mdx)("inlineCode",{parentName:"p"},"frame")," properties.\nThe ",(0,t.mdx)("inlineCode",{parentName:"p"},"frame")," property tells you at which frame the error was thrown. If the error was thrown at startup, ",(0,t.mdx)("inlineCode",{parentName:"p"},"frame")," is null."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-tsx"},"renderFrames({\n  onError: (info) => {\n    if (info.frame === null) {\n      console.log('Got error while initalizing video rendering', info.error)\n    } else {\n      console.log('Got error at frame ', info.frame, info.error)\n    }\n    // Handle error here\n  }\n})\n")),(0,t.mdx)("h2",{id:"return-value"},"Return value"),(0,t.mdx)("p",null,"A promise resolving to an object containing the following properties:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"frameCount"),": ",(0,t.mdx)("inlineCode",{parentName:"li"},"number")," - describing how many frames got rendered."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"assetsInfo"),": ",(0,t.mdx)("inlineCode",{parentName:"li"},"RenderAssetInfo")," - information that can be passed to ",(0,t.mdx)("inlineCode",{parentName:"li"},"stitchFramesToVideo()")," to mix audio. The shape of this object should be considered as Remotion internals and may change across Remotion versions.")),(0,t.mdx)("h2",{id:"see-also"},"See also"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"/docs/bundle"},"bundle()")),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"/docs/ssr"},"Server-Side rendering")),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"/docs/get-compositions"},"getCompositions()")),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"/docs/stitch-frames-to-video"},"stitchFramesToVideo()"))))}p.isMDXComponent=!0}}]);